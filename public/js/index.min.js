let neighborhoods,cuisines,map,markers=[],is_map_to_be_loaded=!1,is_append_properties=!1;document.addEventListener("DOMContentLoaded",e=>{lazyLoadImages(),new Promise((e,t)=>{DBHelper.v1LoadData(!0,(t,s)=>{!t&&s||e(!1),e(s)})}).then(e=>new Promise((e,t)=>{fetchContent(is_append_properties,(t,s)=>{e(!0)})})).catch(e=>{console.log("Error: "+e)})}),fetchContent=((e,t)=>new Promise((t,s)=>{fetchNeighborhoods(e,(e,s)=>{t(!0)})}).then(t=>new Promise((t,s)=>{fetchCuisines(e,(e,s)=>{t(!0)})})).then(e=>(updateRestaurants(),!0)).catch(e=>{console.log("Error: "+e)})),fetchNeighborhoods=((e,t)=>new Promise((t,s)=>{DBHelper.fetchNeighborhoods(e,(e,n)=>{e&&s(!1),t(n)})}).then(e=>{e?(self.neighborhoods=e,fillNeighborhoodsHTML()):console.log("Error: data missing -index-fetchNeighborhoods()"),t(null,e)}).catch(e=>{console.log(e+"-index-fetchNeighborhoods()-catch"),t(e.message,null)})),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=((e,t)=>new Promise((t,s)=>{DBHelper.fetchCuisines(e,(e,n)=>{e&&s(!1),t(n)})}).then(e=>{e&&(self.cuisines=e,fillCuisinesHTML()),t(null,e)}).catch(e=>{console.log(e+"-index-fetchCuisines()-catch"),t(e.message,null)})),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:new google.maps.LatLng(0,0),scrollwheel:!1})}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,n=t.selectedIndex,a=e[s].value,o=t[n].value;new Promise((e,t)=>{DBHelper.fetchRestaurantByCuisineAndNeighborhood(a,o,is_append_properties,(s,n)=>{s&&t(s),e(n)})}).then(e=>{e&&(resetRestaurants(e),fillRestaurantsHTML())}).catch(e=>{console.log(e+"-index-updateRestaurants()-catch")})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",void 0!==self.markers&&"undefined"!=self.markers&&self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{if(!e)return;const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap()}),createRestaurantHTML=(e=>{if(!e)return!1;const t=document.createElement("li"),s=DBHelper.imageUrlForRestaurant(e),n=document.createElement("img");n.className="restaurant-img lazy",n.alt=e.name,s?(img_parts=s.split("/"),n.src=img_parts[0]+"/320/"+img_parts[1],n.setAttribute("data-sizes","auto"),n.setAttribute("data-src",img_parts[0]+"/320/"+img_parts[1]),n.setAttribute("data-srcset",img_parts[0]+"/320/"+img_parts[1]+" 300w,"+img_parts[0]+"/640/"+img_parts[1]+" 600w,"+img_parts[0]+"/1024/"+img_parts[1]+" 1000w,"+img_parts[0]+"/1600/"+img_parts[1]+" 1600w")):n.src="img/placeholder.png",t.append(n);const a=createFavoriteHTML(e),o=document.createElement("h1");o.innerHTML=e.name+"&nbsp;",o.append(a),t.append(o);const r=document.createElement("p");r.innerHTML=e.neighborhood,t.append(r);const i=document.createElement("p");i.innerHTML=e.address,t.append(i);const l=document.createElement("a");return l.innerHTML="View Details",l.href=DBHelper.urlForRestaurant(e),l.setAttribute("role","button"),l.setAttribute("tabindex","0"),l.setAttribute("aria-pressed","false"),l.setAttribute("aria-label",e.name),t.append(l),t}),addMarkersToMap=((e=self.restaurants)=>{if(console.log("is_map_to_be_loaded="+is_map_to_be_loaded),!is_map_to_be_loaded){return document.getElementById("map").innerHTML='<img class="lazy" src="/img/google-map.png" alt="Map">',window.onclick=function(e){window.onclick=null,document.getElementById("map").innerHTML="",window.initMap(),updateRestaurants()},void(is_map_to_be_loaded=!0)}if(e){const t=new google.maps.LatLngBounds;new Promise((s,n)=>{e.forEach(e=>{if(e){const s=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(s,"click",()=>{window.location.href=s.url}),t.extend(s.position),self.markers.push(s)}}),s(!0)}).then(()=>{self.map.fitBounds(t)}).catch(e=>{console.log(e+"-index-addMarkersToMap()-catch")})}});